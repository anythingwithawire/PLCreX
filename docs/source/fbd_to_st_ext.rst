FBD-to-ST Compiler (extended)
=============================

.. fbd_to_st_ext:

The extended FBD-to-ST Compiler represents a feature for optimizing FBDs, where the behavior of instantiated function blocks can be unknown. The optimization approach is shown in figure below and involves configuration with respect
to Halstead’s metrics N (number of edges) ``--edge-opt``, N1 (number of operators) ``--op-opt``, and N2 (variable accesses) ``--var-opt`` [3].

.. figure:: ../fig/fbd_optimizer_designflow_HL.png
    :align: center
    :width: 400px


**Usage**

.. code-block:: console

    python -m plcrex fbd-to-st-ext --help


.. code:: console

         Usage: plcrex fbd-to-st-ext [OPTIONS] SOURCE EXE EXPORT

         FBD-to-ST Compiler (extended)           *.xml → *.st

        ╭─ Arguments ──────────────────────────────────────────────────────────────────────────────────╮
        │ *    source      PATH  source path [default: None] [required]                                │
        │ *    exe         PATH  NuSMV.exe path [default: None] [required]                             │
        │ *    export      PATH  export path [default: None] [required]                                │
        ╰──────────────────────────────────────────────────────────────────────────────────────────────╯
        ╭─ Options ────────────────────────────────────────────────────────────────────────────────────╮
        │ --edge-opt    --no-edge-opt      optimize edges [default: no-edge-opt]                       │
        │ --var-opt     --no-var-opt       optimize variables [default: no-var-opt]                    │
        │ --op-opt      --no-op-opt        optimize operators [default: no-op-opt]                     │
        │ --help                           Show this message and exit.                                 │
        ╰──────────────────────────────────────────────────────────────────────────────────────────────╯

|

POU ``Pollutant_Indicator_WITH_ERROR.xml``
------------------------------------------

The following POU was manually implemented using Beremiz [`.url <https://github.com/beremiz/beremiz>`_].

.. figure:: ../fig/Pollutant_Indicator_WITH_ERROR.png
    :align: center
    :width: 450px

|


Example 1: ``--no-edge-opt``, ``--no-var-opt``, ``--no-op-opt``
----------------------------------------------------------------

**Command**

.. code-block:: console

    python -m plcrex fbd-to-st-ext "tests/real_world_FBDs/Pollutant_Indicator_WITH_ERROR.xml" "bin/NuSMV.exe" ".\exports\01"

**Results**

``01_no_opt.st``

.. code-block:: console

    //--- This file was generated by PLCreX ---
    //--- https://github.com/marwern/PLCreX ---
    //-----------------------------------------

    FUNCTION_BLOCK
    Pollutant_Indicator
    VAR_INPUT
    IN1:BOOL;
    IN2:BOOL;
    IN3:BOOL;
    END_VAR
    VAR_OUTPUT
    OUT1:BOOL;
    OUT2:BOOL;
    OUT3:BOOL;
    END_VAR
    OUT1:=OR(AND(NOT(IN3),NOT(IN2),IN1),AND(NOT(IN3),IN2,NOT(IN1),AND(IN3,NOT(IN2),NOT(IN1))));
    OUT2:=OR(AND(NOT(IN3),IN2,IN1),AND(IN3,NOT(IN2),IN1),AND(IN3,IN2,NOT(IN1)));
    OUT3:=AND(IN1,IN2,IN3);
    END_FUNCTION_BLOCK

|


Example 2: ``--edge-opt``
--------------------------

**Command**

.. code-block:: console

    python -m plcrex fbd-to-st-ext --edge-opt "tests/real_world_FBDs/Pollutant_Indicator_WITH_ERROR.xml" "bin/NuSMV.exe" ".\exports\01"

**Results**

``01_edge_opt.st``

.. code-block:: console

    //--- This file was generated by PLCreX ---
    //--- https://github.com/marwern/PLCreX ---
    //-----------------------------------------

    FUNCTION_BLOCK
    Pollutant_Indicator
    VAR_INPUT
    IN1:BOOL;
    IN2:BOOL;
    IN3:BOOL;
    END_VAR
    VAR_OUTPUT
    OUT1:BOOL;
    OUT2:BOOL;
    OUT3:BOOL;
    END_VAR
    OUT1:=AND(IN1,NOT(IN2),NOT(IN3));
    OUT2:=SEL(IN1,XOR(IN2,IN3),AND(IN2,IN3));
    OUT3:=AND(IN1,IN2,IN3);
    END_FUNCTION_BLOCK

|
